apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grez.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: grez
    {{- include "grez.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "grez.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "grez.name" . }}
    spec:
      containers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-proxy-config
          subPath: nginx.conf
      - env:
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: mysql_host
              name: {{ include "grez.name" . }}-config
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: mysql_database
              name: {{ include "grez.name" . }}-config
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: mysql_username
              name: {{ include "grez.name" . }}-secrets
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql_password
              name: {{ include "grez.name" . }}-secrets
        - name: RAILS_ENV
          value: production
        - name: SMTP_SERVER
          valueFrom:
            configMapKeyRef:
              key: smtp_server
              name: {{ include "grez.name" . }}-config
        - name: SMTP_PORT
          valueFrom:
            configMapKeyRef:
              key: smtp_port
              name: {{ include "grez.name" . }}-config
        - name: SMTP_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: smtp_domain
              name: {{ include "grez.name" . }}-config
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              key: smtp_username
              name: {{ include "grez.name" . }}-secrets
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: smtp_password
              name: {{ include "grez.name" . }}-secrets
        - name: PAYPAL_USER
          valueFrom:
            secretKeyRef:
              key: paypal_user
              name: {{ include "grez.name" . }}-secrets
        - name: PAYPAL_PASS
          valueFrom:
            secretKeyRef:
              key: paypal_pass
              name: {{ include "grez.name" . }}-secrets
        - name: ROOMS_USERNAME
          valueFrom:
            secretKeyRef:
              key: rooms_username
              name: {{ include "grez.name" . }}-secrets
        - name: ROOMS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rooms_password
              name: {{ include "grez.name" . }}-secrets
        - name: STORMFRONT_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: stormfront_base_url
              name: {{ include "grez.name" . }}-config
        - name: STORMFRONT_MY_TRIPS_PATH
          valueFrom:
            configMapKeyRef:
              key: stormfront_my_trips_path
              name: {{ include "grez.name" . }}-config
        - name: STALE_RESERVATION_MINUTES
          valueFrom:
            configMapKeyRef:
              key: stale_reservation_minutes
              name: {{ include "grez.name" . }}-config
        - name: ROOMS_URI
          valueFrom:
            configMapKeyRef:
              key: rooms_uri
              name: {{ include "grez.name" . }}-config
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: webapp
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /app/public/assets
          name: {{ include "grez.name" . }}-assets
        - mountPath: /app/config/secrets
          name: {{ include "grez.name" . }}-file-secrets
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      initContainers:
      - command:
        - chown
        - -R
        - 999:999
        - /app/public/assets
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        name: take-assets-dir-ownership
        volumeMounts:
        - mountPath: /app/public/assets
          name: {{ include "grez.name" . }}-assets
      restartPolicy: Always
      volumes:
      - configMap:
          name: {{ include "grez.name" . }}-nginx-config
        name: nginx-proxy-config
      - name: {{ include "grez.name" . }}-assets
        persistentVolumeClaim:
          claimName: {{ include "grez.name" . }}-nfs-assets
      - name: {{ include "grez.name" . }}-file-secrets
        secret:
          secretName: {{ include "grez.name" . }}-file-secrets

